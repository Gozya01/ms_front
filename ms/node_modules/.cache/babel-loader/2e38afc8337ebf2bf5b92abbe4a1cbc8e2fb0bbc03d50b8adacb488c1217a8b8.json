{"ast":null,"code":"export default {\n  data() {\n    return {\n      username: '',\n      account: '',\n      password: '',\n      info: '',\n      showPassword: false,\n      showPasswordHint: false,\n      usernameError: '',\n      registerStatus: ''\n    };\n  },\n  methods: {\n    // 检查用户名是否为空\n    checkUsername() {\n      if (!this.username) {\n        this.usernameError = '用户名不能为空';\n      } else {\n        this.usernameError = '';\n      }\n    },\n    // 切换密码显示/隐藏\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    },\n    // 提交表单\n    submitForm() {\n      if (!this.username) {\n        this.usernameError = '用户名不能为空';\n      } else if (this.password.length < 6) {\n        this.registerStatus = '注册失败，密码不符合要求';\n      } else {\n        this.registerStatus = '注册成功';\n        // 刷新页面或执行其他逻辑\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000); // 2秒后刷新页面\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","account","password","info","showPassword","showPasswordHint","usernameError","registerStatus","methods","checkUsername","togglePassword","submitForm","length","setTimeout","window","location","reload"],"sources":["src/components/RegisterForm.vue"],"sourcesContent":["<template>\n    <div class=\"form-container\">\n      <form @submit.prevent=\"submitForm\">\n        <!-- 用户名输入框 -->\n        <div class=\"form-group\">\n          <label for=\"username\">用户名</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            v-model=\"username\"\n            @blur=\"checkUsername\"\n          />\n          <p v-if=\"usernameError\" class=\"error\">{{ usernameError }}</p>\n        </div>\n  \n        <!-- 账号输入框 -->\n        <div class=\"form-group\">\n          <label for=\"account\">账号</label>\n          <input type=\"text\" id=\"account\" v-model=\"account\" />\n        </div>\n  \n        <!-- 密码输入框 -->\n        <!-- <div class=\"form-group\">\n          <label for=\"password\">密码</label>\n          <input\n            :type=\"showPassword ? 'text' : 'password'\"\n            id=\"password\"\n            v-model=\"password\"\n            @focus=\"showPasswordHint = true\"\n            @blur=\"showPasswordHint = false\"\n          />\n          <p v-if=\"showPasswordHint\" class=\"hint\">密码必须至少包含6个字符</p>\n          <button type=\"button\" @click=\"togglePassword\">{{ showPassword ? '隐藏密码' : '显示密码' }}</button>\n        </div> -->\n        <el-input placeholder=\"请输入密码\" v-model=\"input\" show-password></el-input>\n  \n        <!-- 基本信息输入框 -->\n        <div class=\"form-group\">\n          <label for=\"info\">基本信息</label>\n          <textarea id=\"info\" v-model=\"info\"></textarea>\n        </div>\n  \n        <!-- 提交按钮 -->\n        <button type=\"submit\">确认</button>\n      </form>\n  \n      <!-- 注册成功/失败显示 -->\n      <div v-if=\"registerStatus\" class=\"status\">\n        <p>{{ registerStatus }}</p>\n        <p v-if=\"registerStatus === '注册成功'\">账号：{{ account }}</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        username: '',\n        account: '',\n        password: '',\n        info: '',\n        showPassword: false,\n        showPasswordHint: false,\n        usernameError: '',\n        registerStatus: '',\n      };\n    },\n    methods: {\n      // 检查用户名是否为空\n      checkUsername() {\n        if (!this.username) {\n          this.usernameError = '用户名不能为空';\n        } else {\n          this.usernameError = '';\n        }\n      },\n      // 切换密码显示/隐藏\n      togglePassword() {\n        this.showPassword = !this.showPassword;\n      },\n      // 提交表单\n      submitForm() {\n        if (!this.username) {\n          this.usernameError = '用户名不能为空';\n        } else if (this.password.length < 6) {\n          this.registerStatus = '注册失败，密码不符合要求';\n        } else {\n          this.registerStatus = '注册成功';\n          // 刷新页面或执行其他逻辑\n          setTimeout(() => {\n            window.location.reload();\n          }, 2000); // 2秒后刷新页面\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .form-container {\n    max-width: 400px;\n    margin: auto;\n  }\n  .form-group {\n    margin-bottom: 15px;\n  }\n  .error {\n    color: red;\n    font-size: 12px;\n  }\n  .hint {\n    color: blue;\n    font-size: 12px;\n  }\n  .status {\n    margin-top: 20px;\n  }\n  </style>"],"mappings":"AAuDA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;MACAC,QAAA;MACAC,IAAA;MACAC,YAAA;MACAC,gBAAA;MACAC,aAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,cAAA;MACA,UAAAT,QAAA;QACA,KAAAM,aAAA;MACA;QACA,KAAAA,aAAA;MACA;IACA;IACA;IACAI,eAAA;MACA,KAAAN,YAAA,SAAAA,YAAA;IACA;IACA;IACAO,WAAA;MACA,UAAAX,QAAA;QACA,KAAAM,aAAA;MACA,gBAAAJ,QAAA,CAAAU,MAAA;QACA,KAAAL,cAAA;MACA;QACA,KAAAA,cAAA;QACA;QACAM,UAAA;UACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}